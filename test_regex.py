import re

p_sql_regex = re.compile(r"^\[(?:2|1)\d{3}(?:-|\/)(?:(?:0[1-9])|(?:1[0-2]))(?:-|\/)(?:(?:0[1-9])|(?:[1-2][0-9])|(?:3[0-1]))T(?:(?:[0-1][0-9])|(?:2[0-3])):(?:[0-5][0-9]):(?:[0-5][0-9])\.(?:[0-9]{3})[-|\+](?:[0-1][0-9]):(?:[0-5][0-9])\] \[OracleBIServerComponent\] \[TRACE:\d\] \[\] \[\] \[ecid: ([\w^:,_-]+)\] \[tid: (\w+)\] \[messageid: [\w-]+\] \[requestid: ([\w-]+)\] \[sessionid: ([\w-]+)\] \[username: ([\w\.-]+)\] (?:\-+) Sending query to database named ([\w\s]+) \(id: <<(\d+)>>\)(?:[\w,\s]+) logical request hash (\w+), physical request hash (\w+?): \[\[\s+(.*?)\s+\]\]", re.I)
# print(p_sql_regex)

test_str = """[2014-05-27T19:24:20.764-04:00] [OracleBIServerComponent] [TRACE:4] [] [] [ecid: 004yabypLcr8XrP5If^Ayf0003Xu00003H,0] [tid: 475bb940] [messageid: USER-18] [requestid: f2c80002] [sessionid: f2c80000] [username: weblogic] -------------------- Sending query to database named Oracle Data Warehouse (id: <<267809>>), connection pool named Oracle Data Warehouse Connection Pool, logical request hash 19859160, physical request hash 63a9f3fa: [[  select distinct T41656.GL_ACCOUNT_CAT_CODE as c1, T41656.GL_ACCOUNT_CAT_NAME as c2 from W_GL_GROUP_ACCOUNT_D T41656 /* Dim_W_GL_GROUP_ACCOUNT_D */ order by c1, c2  ]]
[2014-05-27T19:24:20.970-04:00] [OracleBIServerComponent] [TRACE:4] [] [] [ecid: 004yabypkWO8XrP5If^Ayf0003Xu00003O,0] [tid: 475bb940] [messageid: USER-18] [requestid: f2c80002] [sessionid: f2c80000] [username: weblogic] -------------------- Sending query to database named Oracle Data Warehouse (id: <<272270>>), connection pool named Oracle Data Warehouse Connection Pool, logical request hash 92cffe24, physical request hash fc27510e: [[ WITH SAWITH0 AS (select  /*+ CACHE(T68387) */  T80943.SYSTEM_NAME as c5, T48574.ORG_NUM as c6, T68387.MCAL_PER_NAME_QTR as c7, T68387.MCAL_QTR_WID as c8, sum(case  when not T43813.ODUE_4_GLOBAL1_AMT is null then T43813.ODUE_4_GLOBAL1_AMT * -1 else 0 end ) as c9, sum(case  when not T43813.ODUE_3_GLOBAL1_AMT is null then T43813.ODUE_3_GLOBAL1_AMT * -1 else 0 end ) as c10, sum(case  when not T43813.ODUE_2_GLOBAL1_AMT is null then T43813.ODUE_2_GLOBAL1_AMT * -1 else 0 end ) as c11, sum(case  when not T43813.ODUE_1_GLOBAL1_AMT is null then T43813.ODUE_1_GLOBAL1_AMT * -1 else 0 end ) as c12, T31629.ROW_WID as c13 from WC_LOL_SYSTEM_NAME_D T80943 /* Dim_WC_LOL_SYSTEM_NAME_D */ , W_MCAL_DAY_D T68387 /* Dim_W_MCAL_DAY_D_Fiscal_Day */ , W_INT_ORG_D T48574 /* Dim_W_INT_ORG_D_Company */ , W_DAY_D T31629 /* Dim_W_DAY_D_Common */ , W_AP_AGING_SUPPLIER_A T43813 /* Fact_W_AP_AGING_SUPPLIER_A */ where  ( T43813.COMPANY_ORG_WID = T48574.ROW_WID and T31629.ROW_WID = T43813.SNAPSHOT_DT_WID and T43813.DATASOURCE_NUM_ID = T80943.X_DATASOURCE_NUM_ID and T43813.SNAPSHOT_DT_WID = T68387.MCAL_DAY_DT_WID and T43813.MCAL_CAL_WID = T68387.MCAL_CAL_WID and T48574.COMPANY_FLG = 'Y' and T68387.MCAL_CAL_ID = 'R' and T68387.ADJUSTMENT_PERIOD_FLG = 'N' and T68387.MCAL_PERIOD_NAME = '2009R 12' and T68387.MCAL_PER_NAME_QTR = '2009 Q 4' and T68387.MCAL_PER_NAME_YEAR = '2009' ) group by T31629.ROW_WID, T48574.ORG_NUM, T68387.MCAL_QTR_WID, T68387.MCAL_PER_NAME_QTR, T80943.SYSTEM_NAME), SAWITH1 AS (select LAST_VALUE(D1.c9 IGNORE NULLS) OVER (PARTITION BY D1.c6, D1.c8, D1.c5 ORDER BY D1.c6 NULLS FIRST, D1.c8 NULLS FIRST, D1.c5 NULLS FIRST, D1.c13 NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as c1, LAST_VALUE(D1.c10 IGNORE NULLS) OVER (PARTITION BY D1.c6, D1.c8, D1.c5 ORDER BY D1.c6 NULLS FIRST, D1.c8 NULLS FIRST, D1.c5 NULLS FIRST, D1.c13 NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as c2, LAST_VALUE(D1.c11 IGNORE NULLS) OVER (PARTITION BY D1.c6, D1.c8, D1.c5 ORDER BY D1.c6 NULLS FIRST, D1.c8 NULLS FIRST, D1.c5 NULLS FIRST, D1.c13 NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as c3, LAST_VALUE(D1.c12 IGNORE NULLS) OVER (PARTITION BY D1.c6, D1.c8, D1.c5 ORDER BY D1.c6 NULLS FIRST, D1.c8 NULLS FIRST, D1.c5 NULLS FIRST, D1.c13 NULLS FIRST ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) as c4, D1.c5 as c5, D1.c6 as c6, D1.c7 as c7, D1.c8 as c8 from SAWITH0 D1), SAWITH2 AS (select D1.c1 as c1, D1.c2 as c2, D1.c3 as c3, D1.c4 as c4, D1.c5 as c5, D1.c6 as c6, D1.c7 as c7, D1.c8 as c8, D1.c9 as c9, D1.c10 as c10, D1.c11 as c11, D1.c12 as c12, D1.c13 as c13 from (select '' as c1, D1.c4 as c2, D1.c3 as c3, D1.c2 as c4, D1.c1 as c5, case  when D1.c4 + D1.c3 + D1.c2 + D1.c1 > 0 then D1.c4 / nullif( D1.c4 + D1.c3 + D1.c2 + D1.c1, 0) * 100 else 0 end  as c6, case  when D1.c4 + D1.c3 + D1.c2 + D1.c1 > 0 then D1.c3 / nullif( D1.c4 + D1.c3 + D1.c2 + D1.c1, 0) * 100 else 0 end  as c7, case  when D1.c4 + D1.c3 + D1.c2 + D1.c1 > 0 then D1.c2 / nullif( D1.c4 + D1.c3 + D1.c2 + D1.c1, 0) * 100 else 0 end  as c8, case  when D1.c4 + D1.c3 + D1.c2 + D1.c1 > 0 then D1.c1 / nullif( D1.c4 + D1.c3 + D1.c2 + D1.c1, 0) * 100 else 0 end  as c9, D1.c5 as c10, D1.c6 as c11, D1.c7 as c12, D1.c8 as c13, ROW_NUMBER() OVER (PARTITION BY D1.c5, D1.c6, D1.c7, D1.c8 ORDER BY D1.c5 ASC, D1.c6 ASC, D1.c7 ASC, D1.c8 ASC) as c14 from SAWITH1 D1 ) D1 where  ( D1.c14 = 1 ) ) select D1.c1 as c1, D1.c2 as c2, D1.c3 as c3, D1.c4 as c4, D1.c5 as c5, D1.c6 as c6, D1.c7 as c7, D1.c8 as c8, D1.c9 as c9, D1.c10 as c10, D1.c11 as c11, D1.c12 as c12 from SAWITH2 D1 order by c1, c10, c11, c12  ]]
"""

matches = p_sql_regex.finditer(test_str)
# print(matches)

for matchNum, match in enumerate(matches, start=1):
    
    print ("Match {matchNum} was found at {start}-{end}: {match}".format(matchNum = matchNum, start = match.start(), end = match.end(), match = match.group()))
    
    for groupNum in range(0, len(match.groups())):
        groupNum = groupNum + 1
        
        print ("Group {groupNum} found at {start}-{end}: {group}".format(groupNum = groupNum, start = match.start(groupNum), end = match.end(groupNum), group = match.group(groupNum)))


